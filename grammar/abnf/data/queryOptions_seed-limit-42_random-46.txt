$COuNT=fAlSe&B=eNdSWITH((	$root/_9_4 	 SuB bINARy'g-65_uu5'	Eq 				@A1V/@P27#S/_()  MOD _(_M5_=@L7)  	DiV  caST($root/_//_ DiVbY '' Lt '' and '' 	 , _._)  GE GEOMETRY'sRid=7;MulTIPOLyGon()' SuB '' IN '' anD		Isof(		(-52 MOD	(MINDATETimE() GE '' OR '' ) add ''	Ge _()/$count eq ''  or	_() ge '' ) DIvBy	 {"":'',"":'' }   dIvby $root/_ diV ''		 gE		-'' And ''		 anD 	$it Lt ''  iN	-   _() eq '' anD ''	 Mod	'' DIV '' IN ('')  oR	 CAsT(Edm.Binary) DIV '' and ''	or		 $it/_/_  SUb  MindATETiME()  gt cast(Edm.Binary)  aNd	_() Add '' Or '' , Collection(dRN)   		)			in			(	 Z.__._'V_,+7') or	 -J_(_=[])/$count($SEArCh='')	dIvBY {} ADd '' Ne ''  has	_._'4' DiV 		[]	EQ	-'' moD '' ge '' anD  		($root/_/__   gt  caST(Collection(_1M__) ) Sub	-_._(_=@_)/$count Ge CAsT(Edm.Binary) DIV '' dIvBy $root/_/ aDd '' Lt '' oR ''  ne  	nOT '' eq '' 		) dIV NOT $root/Rv//_._._/@_ 		eq 	Not ('') LE '' 	 Gt IsOF(Edm.Binary) AnD	--'' mUl '' AND '' SUB CAsT(Edm.Binary) mod ''	 lE  noT '' DivBy '' eQ '' mOd	$root/T(GEOgRaPhY'sriD=9;mULTiLineStRiNg()')/_._/_/$count	ANd	seCOnd(monTH('') ne '' DiVbY ''	)   	lE	 -cAst(Edm.Binary)	And	$it add '' or ''	AND GEOGRApHY'srId=8;MulTiPolYGon()' dIVBY ('') Mod '' Or '' oR 		 	 {  	 }			aDd	isof( 		_._._  )		 ADD []	diVBY	 '' Has	 '8,0'	 oR	 -'' sub '' EQ		noT $it mOd ''	 dIv $root/_ LT '' Lt	nOT ''	or  [] NE ''	and $root/_		 DIv $root/_('')/_ MoD -'' aNd '' OR  	0970-10-19t08:03z diV '' GE ''	 )	OR	 _ Mul	(		 	_/$filter('')/_/$count) Gt I._k_bD._4e._()  	Lt  	(0364-12-21T20:05+20:07   DiVby 	 NoT '' diVby '' lE ''	le NOt '' dIV '' ANd '' Or $root/_ aDD '' haS '1' aNd ''	) 	MUl	 @_/_/_	 dIvBY	_() eQ '' 		Eq	-		 [] EQ '' NE	('') GT ''  AND	 _() ANd	{"":''} AND ''	OR	   NOT 	  -0042-07-23t01:55z	Divby	Isof($it DiVBY '' OR '',Edm.Binary	 ) Ne [] ANd '' gT SUBStrINg('','') Or ''	 oR 	 	( -'' DIv '' gT '' aNd '') Mul '' ne '' AnD ''	 						GE	-		gEograpHY'SRID=1;lINEstRING(2 3,2 5)'		Or	casT(nOt '' MUl '' lt '' Or ''	, _		 )		 Or		_ Ne CAsT(_.k_.m._._(__L=@KG__,EZ=@x,L=[])/__7B__/$filter($it oR '')  Ne 	CasT(null	gE	MiNDateTiME() GE '' Or '',			Collection(___)	)  mUL  	cast(	_() Ge '' ANd '',  Edm.Binary	 )	lt	mIndatETIME() divby '' aND '' 	ANd	{} ADd iSoF(Edm.Binary) SUb '' iN ('') oR ''	 ,	_)  AnD  -  _/_/_		aDD 	{":": ""			 }	sUB Not ('')	HaS	'8' oR  -'' MUL '' haS '0' or ''	OR	98031887-7064-5697-0062-790304126380 dIv $it SuB '' Eq '' Or '' diV	ISof(	{ 	 ":": ''	} 	 	 HAs	'_', Collection(Edm.Guid))	  ge	_(__=[])/_		dIv	 	_._(_=@_)	aND	( '' dIv '') MOd '' le ''	AND		  CASt( DATE(_() Gt '' ANd '')	 aND _() AnD '' , Collection(___._) )	ge	20:15	 	  ANd NoW(	 ) gt	'' DIV '' and ''		 anD $it OR ''	,	CAST(_.Nr)	gE	  gEO.dISTanCe(	casT((  w.k_.s(_=@L__,_=@_,_=@_,_=@_)/_._()		sUb	 9		 Or	noT '' dIVBy '' OR '' Le $this/_		GE dAY('') dIV '' oR ''  anD	TiMe( $root/_ gE '')	 MOD $it eQ '' OR '' le ('')		 ) 	SUb		_._()		DIv	 	cAst(nOT '' MOD '' Lt '' Or ''	,Collection(Edm.Binary)	)		  	lE  -					cast(_._  )	mUL  NOt '' anD '' gT 	{} GT '' oR ''	oR	 -isOF(Edm.Binary) SUB '' adD mindATEtIMe() dIv '',r.u) 	And y.__92G0T__()	 	eq B___._(__='')/_ muL 	_._(_=@_) MuL isOf(Edm.Binary) mUL '' aND ''	eq (  '' suB '' aND '') Div ('') Mod '' LE '' adD '' AND ''		aND	 	isof( Collection(_)) Gt '' Or '',	GeOmeTry'SriD=8;MUltipolyGOn(((NaN INF 0.48,-INF INF +8e+94 362,92.07E+9 11.1 4.8E+7)),((9.5E5 7006E+9 -INF NaN,-INF -INF 3.1 -INF,NaN 7E1 +7.2,NaN NaN),(INF NaN -INF +45)),((0 INF)),((+2e+7 -INF,NaN 4e7 5,8 3 0 3)),((NaN NaN 5,3 NaN 0,5 8),(4 9,6 7 4 4,8 9 7 0,6 6),(2 7 4)))')	add		Z_()/r/__/	diVby 	matCHEspAttERN({}	  	mOd		  	 {"":'',"":''}	aNd  MindaTETime()	AnD	  _ Has '9' oR ''	,	-{  }  MoD		$it sUB '' HaS '0'		IN   casT(Edm.Binary) muL '' Or ''	AnD isOf(Edm.Binary) diVBY '' In ('')	) 	  sUb	$root/a__(@J)/_/$count  le	-IsOF(Collection(_) ) IN ('')	aDD	  nOt '' sUB '' gT ''  haS 	 '_,7' ANd 	'' oR ''	 	GE _._/_._()/_ anD 	NOt []	 Gt  ('')	AnD	 $root/_ lt '' 	gt 		[""		] SuB 			nOT 	-nOT '' MUl '' ne '' AND ''	SUb		 cASt(Edm.Binary) hAs '6'	  iN iSOF(Edm.Binary) dIV '' GT '' 	 oR ('') sUB '' haS '4'	 		aND	  -$root/_/_ sUB '' NE	cAst(Edm.Binary) ANd ''	lt	_()/$count  	 DiV  	 -- -'' MOD '' or '' mOd '' and ''	  IN (7 )	  Ne	 	-	$it/_ Mod ''  Ne	 cEILInG(( cAST(__._._.D(_=@_,_=@_,_=@_)/_/_ ne NOT '' Sub ''	 Or	('') MUL '' iN (''),	Collection(H_)	)	or	(	-'' hAs '6' ANd '')	 MOd	$root/_ mOd '' And ''	lE $root/_ ge '' Or ''	 oR	isof(Edm.Binary))	sub 	CAST(P__	 )  sub  isOf('' Div '' aNd '' ,Edm.Binary 	 ) ge nOT '' Sub '' or ''	lE Isof( $root/_,  Collection(_))	 AdD	NoT '' OR '' eq  $root/_ Or -'' div '' 		 anD	 	- NoT '' lt '' AdD cAst(Edm.Binary) mUL '' eq '' LE [] mOD '' GT '' OR ''))