oRDeRbY=$it/l()	MuL	contains( CONCAT(	    	 _.h_4()	 	 dIVBy		 ConcAt(	 ISof( Collection(Edm.Geography)) DivbY		S_		muL 	 isOf(Edm.Binary)	EQ	$it	lE	null	aND	null	Or ISOf(null,Collection(Edm.Binary))	EQ		_(_=null,_=@_,_=@_)     		And	$root/_//	  ,	 		t_5.b_(_k8=@_G)/:// AND	$root/K///_/@_ 	 	suB _._()	in	null	And	null	gT	$it/_) hAs	_3.h'774,4,_S_,+59' And $root/h/(='/,)!/_w/_._._/$count($search='';$SEARCH='') ,coNCAt( $root/H/ In	  	(+8  	 ,tRuE	),startswith(h209(L=[],_=@_,_=@_)/  		Div	@_ 	Or casT(Edm.Binary)	le	null	OR	null ANd 	_()/$count	DivBy	_()	or	null	OR	null	,	isoF( Collection(Edm.Geometry)		 )		mUl cAsT(	Edm.Binary 		)		Div 	cAsT(Edm.Binary)	DIv	null	ne	null	ANd	null		gt 	CAST(Edm.Binary)	ADD	null	LT	null	anD	null)	DIV	$root/q//_()/$count SUB			HASSUBSEQUENCE(ISoF(Edm.Binary)	AdD	null,cAST(Edm.Binary)  )	DivBY	isoF($root/_	gt	null	anD	null , Edm.Binary)	or	null iN  		HASSUBSeT(null,null)	sUb	null	OR	null and	E2__(_=@_)/_._/ Div 	hAsSUbSEt(null,null)	HAs	'_'	aND	null ANd 	ConCAT(null,null)	HaS	'_'	OR	null  	 gT   red(_=[null],_V=@W,P={},_=null,__=@_,_=null)	le	ISof(Collection(Edm.Geography) )	nE	  CaST( Edm.Binary)	dIv	mIndaTETIME()	And	null	GT	$root/_	MOD	null	OR $root/_0_/	 mUL $root/_//_ 	Gt	$root/_//_	oR	null oR	cOncAT(null,null)	div	null	ne	null) DIvBy	 caST(	Edm.Geometry 	) Sub	_d_(_=@__9__)		LT 	GEO.INTERSECTS(	cASt(Edm.Binary)	and	CAST(Edm.Binary)	Mod	null	LT	null	anD	null,IsOF(Edm.Binary 	)		or			CaSt(Edm.Binary)	HAs	'_')	eq $root/_/:/_/$count			EQ _._(_=@_,_=@_) 	Div 	isoF(Edm.Binary)	IN	(null)	or	null  or	cAST(cast(Edm.Binary)	anD	null , Edm.Binary	)	SUB	$it	or	null	Gt	$it	Has	'_'	ANd	null	 And	 		cAST(Collection(Edm.Geography))		 dIvBy 		_()/$count oR  $root/_//_	EQ	null	or	null)  	 mod cOnCAt( 	 COncAT(_	mod	CONcAt($root/_/	muL	null	eq	null	oR	null,$it	SUB	null	And	null)	Ge _	suB	$it	diVby	null	HaS	'_'	aNd	 caST(	null,Collection(Edm.Binary)	)	gT	null 	,ENDSWITH(	EnDSWith(null,null) 	lt 	$root/_	muL	null Or 	$root/_	MUL	null	or	null,	GeO.IntersECTS(null,null) aDD		Cast(Edm.Binary)	MoD	null	lE	null 	and _()	mOd	null	hAs	'_'	OR	null) aDD	 cONcAT( coNCaT(null,null)	ADd	null	gE	null	, 	 $root/_//_	oR	null) 	 OR		 	_._()	div	null	le	null) 	  aDd  $root/N/	MuL 	 	casT(__()/_/	MOD	$root/_	SUb	null	eQ	null	OR	null 	HAs	_._'_'		aNd mIndATEtImE()	HAs	'_'	OR	null,Collection(Edm.Geography)) lE 			$root/__//_/_ 	DiVBY	$it	Gt		_()	add	null	Ge	null AnD 		cASt(	 $root/_	dIV	null,Edm.Binary)	MuL	_()	ADd	null	has	'_'	or	null 	AnD iSoF(_()/$count	sUB	_()	In	(null)	aNd	null,Collection(Edm.GeographyCollection)		)	 Mul    CaST(  MINDATEtimE()	or	null, Edm.Binary)	divby	MindatETIMe()	NE	null	ANd	null	lE	cASt(Edm.Binary)	oR	null 	hAS 	_._'5'	or  $it/_ 	 Ne	  	$root/B//_._() or _/_/@_ aDd	 isOf( 	_()	SUB	null	haS	'_'	or	null,	Edm.Binary)	Eq	$root/_	in	(null)			ge			 	CaSt(CASt(Edm.Binary)	,Collection(Edm.Binary))	ADD	isOF(Edm.Binary)	SuB	null	or	null	 Or	$root/_//_  ,cAST(  	Edm.Geography	)	 				haS   	 U20l.zo'_'	anD	$root/__///$: mUl  eNDswiTH( 	$it	MoD	null,$it	oR	null )	aND  	_._()	dIVby	null	eQ	null  	le	_) oR caST( W2(_9____=@___)/$//_._/@_	AND	  	isoF( _/_	aND	null, Collection(Edm.GeographyCollection)  )	DIv	CoNCAt(null,null)	mOD	IsOF(Edm.Binary)	anD	null	and	hAssubSet(null,null)	ge	null,	Collection(Edm.Geometry) ) GE  cOnCAT( 		_() ,isOF(Edm.GeographyCollection	)	  )		moD	 		haSsuBSeQUENcE( cONCAt(null,null),HASSuBsET(null,null)	or	null 		) sUB				_/_		SUb _()	mOd	null		AnD 	CAST(Edm.Binary)	SuB	null			 or casT( cONCAT(null,null)	,Edm.GeographyCollection	 	  )	And CAST(Collection(Edm.GeographyMultiPolygon))	sUb	 		 	cASt(Edm.Geography	)	AnD 	  iSOF( Edm.Geometry)		SuB 	b.F_()	 aDD	isOf(	 $root/x/::/_/_() 	oR	 	cAST(Edm.Binary	)	DIV	mINdATEtiMe()	MOd	null	ge	$root/_	Mod	null	oR	null	anD	null,Collection(Edm.GeographyLineString)		) nE	   CONcaT(		iSoF($it	HAs	'_', Edm.Binary	)	oR	null	,cOncat(null,null))	NE 		iSOf( 	CasT(_	OR 	_()	haS	'_'		,Edm.GeographyCollection) DiVby  	_._.__()		In (null,null) 	OR		IsoF(Edm.Binary)	ANd	IsOF(  Edm.Binary )	and	null	  , Edm.Geometry  )	ne	$root/_//:/_()	moD	 $it 	AdD		$it	dIvBy	null	In	(null)	and	null 	gt 	$root/_	diVbY	null or $root/_	lT	null 	iN 		(	GEogRaPHY'sriD=1;COLLEcTIon(MulTIpolYgOn())')	anD	Isof(cAst(Edm.Binary)	dIVby	null	iN	(null), Collection(Edm.Binary) )	hAs	'_'	oR	null GE 	X()/_1j//ORK/@_.L#__/_			sUb 	isoF(Collection(Edm.GeographyMultiPolygon)  	)	 	Mod $root/_M7//:/ nE	ISOf(Edm.Binary	) 	gE	$it	Gt	null NE		iSOf( 	Edm.Geometry )	anD 	hasSUBSeQuEnCE(null,null)	mod	isOF(Edm.Binary)	gE	null AND			 		  $root/___//$$:/$:/    	IN $root/_//, ISOf(	__a4(b=	{ 		})/_E//x7.F.__/_7()	Div	cAsT(_ LE GEO.iNTErSecTs(Isof(null,Collection(Edm.Binary) ) ,$it	gT	null)	 GT   G(_=@_)/ Add HasSubSET(null,null)	mOD	null	or	null	 aND 		cast(Edm.Binary)	Sub	null	hAs	'_' 	OR	_/$count  	  mOD _/_		Le _()	AdD	null		aNd			cAsT(mINdaTeTimE()	sUb	null	HAs	'_' ,	Collection(Edm.Binary))	Sub	mINDatetImE()	sUb	null	hAs	'_'	anD	null ,Collection(Edm.GeographyLineString)		  )	lT	 	$root/_/)//_/@_ sUB @N5/_ 	diV	$root/C//_/_	aND 		CAST(Edm.Binary)	ge	$it/_/_ Sub haSsubSet(null,null)	mOd	null	lt	null nE		$root/_5/$::/_()	dIV caSt( Collection(Edm.Binary) 	)	Or		 $root/l///@L 	mUl  	iSoF( 	$root/N//  lE	 	$root/_/ aDd 	$root/_	eq	null , Edm.GeographyMultiPolygon) 	dIvby   cast( 	 	Edm.GeometryCollection) ANd	CAsT( Edm.Binary )	IN	(null) 	LE CONTAINS(_._()	mOD	null,caSt(null,Edm.Binary)	MUl	null	Gt	null	and	null )	Div		$root/__//_ 	SUb cASt(Edm.Binary)	Gt	null	OR	null aNd Cast(Edm.Binary)	AND	null 	eQ			IsOF(   CaST(Edm.Binary)	aDd	null	eq	null	anD	null, Collection(Edm.Binary))		And 	$root/_	GE	null	OR	null  Gt	 $root/xK/!!/_.__._._._.__/@_._._#_	aDd	_._()	has '+2'	iN	$root/O/// ANd				_._()	dIVby	null	NE	null, 		 Edm.Geometry )			dIV $root/_2/,, 		 aDD CaST(COnCat(	$root/_/:/_._/_,_) ne $root/rRo_U/$,Edm.Geometry  	)	 le	$root/_3g__//!!$/!$/$$//A_XH/__._.___(_=null)/  		and 	cONcAt( 	 	  @d/$count	LE 	 COnCAT(ISof(	_()/$count	GE	null,	 Collection(Edm.Geography))		OR   	_()	Has	'_'	oR	null 			,geo.INtErsects(MinDatEtIMe()	dIV	null	Ne	null	AnD	null , MInDaTETimE()	or	null	)	DivBy cast(Collection(Edm.Binary) )	gt	null	Or	null  Ne	_	IN	(null)	aNd	null  AND		 	_	Mul	null			) nE	 _.X__.__._.c4(_=@_)	mod  isOf(Edm.Binary)	Div	CaSt(Edm.Binary)	oR	null	Eq	isOF(Edm.Binary) GE 	 eNDSwitH(null,null)	aNd	null	 	or	   _	Ne	null AnD  GeO.IntERSects(	cast(Edm.Binary)	DIVby	null	iN	(null)	, caST(Edm.Binary)	)		DIvby				_				OR	isof(Edm.Binary)	iN	(null)	Or	null or cast( Collection(Edm.GeographyMultiPolygon)	)	DivBy  _ SUb isof(null,Collection(Edm.Binary))	dIVBy	null	gE	null	 	oR	HasSUBsEt(null,null)	gt	null	aND	null 	HaS _K_.C.__._._._7N'N8,45,_,_'		  and __.H__(_=null)	 	Add	iSof(null,Edm.Binary)	Mul	null	ge	null	ANd	null Le $root/_//_	MOD	null	lT	null  	Or	 iSOf(Edm.Binary)	And	null	,		_ptS(__=@V4)	EQ		 A__._/_._(_=@_)/_/		Or 	 cONcAt( Isof(null,Edm.Binary)	Lt	null	And	null	  ,ISOF(null,Edm.Binary)	oR	null  )  or			$root/_/	DIV	null	or	null		 	)	 moD	   $root/_/	gt 		 CasT(   _._I.__.__.G(_=[],_=@_)/_.__//_/_	 IN			@_	adD	ISoF(Edm.Binary)	LE	CASt(Edm.Binary)	MOD	null	LT	null	aND	null  ,Edm.GeographyLineString  )	 mod	$root/_9I/:	 Ge __(_=@_) dIvBY MindAtetIme()	Add	null	aND	null		gT		cAsT(Edm.Binary)	sUB	null	GE	null	Or	null OR		$it	MOd	null	and	null	 in ( geoGrApHY'Srid=499;mULtilINeSTrinG()',  -73	,	biNarY'' ) 	ANd	O7__.I._._.q()	gt  		CAsT(	Collection(Edm.Binary))	dIV	$root/_	Divby	null ne					ENDSwIth(haSsUbseqUENcE(	 iSof( Edm.Binary ) 		,			cASt(	null,Edm.Binary)	DIvbY	null	EQ	null) muL	 	CONCAT(isoF(Edm.Binary)	Le	null	or	null ,  _()	oR	null 	)			sub	CaSt(Edm.Binary)	diV	null	AnD	null nE	$it	moD	null	lE	null HAs 'F_'  		AnD			casT(MINDaTeTiME()	Lt	null	or	null  ,Edm.Binary		)	oR	CaST(Edm.Binary)	LE	null,ISOf(Edm.GeographyLineString) MOD iSoF(Edm.Binary	 	) or _()	Has	'_'	ANd	null)	 hAS   _._'3,-5'   ANd  $root/p6_3/ ne		Cast(   _()/$count	has	_._'_'	OR	null,Collection(Edm.GeographyCollection))  sUb		$root/_/	diVBY	_()	In	(null)	In	null oR	$root/_/	DIvBY	null )	DIvbY isof(CasT(	isoF(	@____/@J  or	op.Z(_=@_)/_.__._.d_/:	 	, Edm.GeographyMultiPolygon  )  muL	isof(Collection(Edm.Geometry)) 	LT	_(_=@_,_=@_,_=@_)		AnD	D.__.__.N()		MOD 	$root/_/	diV	$it	mul	null	has	'_'	or	null 	lT EndswiTh(null,null)	lT	MiNDATETime()	mUl	null	eq	null GE	Contains(coNTaINS(	COnCaT(null,null) 	,_._()/$count	ANd	null), _._._.G_/_._()/$count	div	Z()//_)	gt	  $root/A/ 	DIV cOncAT( GeO.intersects(null,null)	mOd	$it	GT	$root/_	Mul	null	ANd	null	ANd	null,ISof(Collection(Edm.Binary))	DIVby	CaSt(Edm.Binary)	Eq	null	aNd	null  		 )	ne	_._.__(_=@_,_=@_)/ Ne		Cast(Edm.Binary)	eq	null	Or	null AnD iSoF(		Edm.Binary)	Add	_()	aDD	null	Or	null	nE	CaST(Edm.Binary)	dIvBy	null	or	null oR	@H_97B  GT 			_()/:/:// Or		 COncaT(_ 	SUb _	lT	null	Or	null  gT	iSoF(Edm.Binary)	sub	null	lt	null	ANd	null or isOF(Edm.Binary)	mOd	null	Or	null,CasT(CaSt(Edm.Binary)	add	null,Collection(Edm.Binary)) 	EQ  isOf(Edm.Binary)	in	(null)	Or	null	anD 	MinDAtEtiME()	lT	null	and	null)   	 	 	AND __.__(_=@_,_=@_)	 MUL	casT(Edm.Binary)	LE	null	gE	_	In	(null)	aND	null	 ,Edm.Geometry	) Mul   		GEO.iNtERsecTS( _(_=@_,_={},_aT9=iSOf(null,Edm.Binary)	mUl	null	aNd	null)	 mOD		ISof(   isOf(cAst(Edm.Binary),Edm.Binary)		dIv	_._()	MOd	null		Eq	coNcAT(null,null)	mOD	null	le	null, Collection(Edm.Geography)    )				 gT	 	CONCAT(mINDaTEtIME()	GE	null	AND	null, $it	aDd	null	gt	null)	 	oR	miNdAtETIme()	MoD	null	AnD	null 	 AND	ISOf( Edm.Binary) AND	MInDaTeTiME()	mod	null	iN	(null)	AND	null		 Lt	q._B(_=_())	div	caSt(Edm.Binary) 	SUb _	LT	null	And	coNCAT( $root/_	OR	null, minDAteTiMe()	GE	null)	Or		$root/__/ Le		_.__()/_/ SUb 	isOf(Edm.Binary)	le	null	or	null 	or	IsoF(Edm.Binary)	DIV	null aNd CaST(Edm.Binary)	Lt	$it	Gt	null		,	 	isOf(Edm.GeometryMultiPolygon)	Div $root/I/// lT			_/_() 	sub	 	isof(null,Edm.Binary)	DIv	null	Or	null EQ	CAsT(Edm.Binary)	diV	null	or	null	 Lt	 STARTSWITH(_	ge	null	, cAst( null,Collection(Edm.Binary)	)	GE	null	and	null	)		gE _.B(_=null) 		And $root/_	mOd	null	And	null		or		isOf(mInDATEtimE()	or	null,Edm.Binary ) 	gt 	_() 	AND isOf(Edm.Binary)	eQ	null 	)	DIv			iVy._.r()/m_//@L/_	 mul	 $root/_//!$$/@V_#__/_()		MUL endswItH( 	$it	Sub	null, 		ISof(Edm.Binary)	Mul	null	lT	null	anD	null	)  aDD  _._()/	DIVBY 	IsOF(Edm.Binary)	dIV	null in	('_0,_,+82,S_' ) or			isOF( U_.o(_=[])//_() mUL $root/p/:///_/_	 		nE $it,Edm.Geography)	mod	cOntaiNs(sTARTSWITh(null,null)		div $root/_	lt $it	gt	null	OR $root/_	Has	'_'	Or	null,  	__()/ gT 	ISOf(Edm.Binary)	mUL	null	Le	null	or	null	)	aDD cAst(Edm.Geography 	)	EQ $root/_/	Ge	CAsT(Edm.Binary)	mod	null	OR	null or	isOf(	null,Edm.Binary)	mOd	null		gt $root/_// Or	$root/_/	dIv	null	ge	null	oR	null  EQ 		 S()/q/	Gt	cAsT(_()	MUL	ISoF(Edm.Binary)	dIvbY	null	Ne	null	aND	null	lt	_()	LT	null	anD	null	,Edm.Geography	  ) sUb	isOf(  Edm.Binary )	sUB	mIndATetIME()	has	'_'	LE	IsOf(Edm.Binary) IN		(53365508-2725-3158-1513-684303794572,2	) anD gEo.InTERsECts( iSOf(Edm.Binary) ,isoF(Edm.Binary)	div	null	Or	null	) 		lE				cast( null,Collection(Edm.Binary) )	iN	null Or			cast( CoNcat(cAST(Edm.Binary) 	,_._()	HaS	'_'	 )  ,Collection(Edm.GeometryMultiPolygon) 	 	) 		Gt	  	CasT(		Collection(Edm.Geography)) LT	cast(null,Collection(Edm.Binary)	)	LE	null	  OR	 $root/_//_	GE	null	oR	null	lE $root/__/!!//_10._(_=@M) muL	cAST(	Collection(Edm.GeographyMultiPolygon) )   And	i5/_(_=@_,_=@_)/		Has	 '_7,-02'	AND		  $root/_/   	DIVBy $root/_//_	LE	null	aNd	null		,Collection(Edm.GeographyLineString)	 	)	 DiVBY    		isOf(			   	 Edm.GeometryMultiPolygon)		 eQ IsOF(COncaT(  	cASt(@_ 		dIVBy		cAsT(ISof( 	Collection(Edm.Binary))	MUL	_()	DivBY	null	le	$root/_	dIvby	null	in	(null)	And	null,Collection(Edm.Geography)	 	 	) AnD		ConCaT(null,null)	gt	null 	 OR CAST(Edm.Geography)		,Collection(Edm.Geometry))  muL	$root/_/	dIv	 @_	 mOD	 ConcAt(null,null)	mOd	isof(Edm.Binary)	or	null lE	$root/i/!$$///_()	 and	Y._.B___(_=null,_=null)//_	le		conCAT(null,null)	  ,	ISOf(	Collection(Edm.Geometry)  		 )	ADD	cASt(  Edm.Geography	)	 MoD	iSof(  CoNcat(null,null)	Or	null	,  Edm.GeographyCollection) 		mod	coNtAIns(null,null)	divby	isOF(Edm.Binary)	muL	null	Or	null   And iSoF(	Collection(Edm.Geography))  DIV	  $root/_//_	eq	null	Or	null 	or		iSof(null,Edm.Binary)	aND	null lT cAST(	 Collection(Edm.GeometryLineString)	 			)   DIV   caSt( 	_/_	MOD	$root/_	Ge	null	eq	_()	mOd	null	nE	null	ANd	null,Edm.Geography) 		lT	CASt(MinDATetImE()	Gt	null ,Collection(Edm.Binary)	)	aDD	$it	dIV	null	lT	null	And	null 	hAs	t_._'0,625'	OR	 $root/r_ffM2__/	MUl	CAsT($root/_//_	DIVby	null	hAs	'_', 	Edm.Geography)		LT 			hASSUBsEt(null,null)	AdD	null	and	null   Ne  $root/H/	MoD	IsOf(Collection(Edm.Binary))	aND	null 	ANd	  $it	ADD	null	OR	null) 	or  	 	$root/_/+;/_.N_._.W(_=@_)	Add	@E IN	  	 (   GEoGRaPhy'srID=35;MUltILInEstriNg()',GeogrApHY'srId=1;POiNT(+7 NaN 1)')   aNd 	caSt( $root/_4_//	 lE $root/_/	eQ	null	,Collection(Edm.GeographyMultiPolygon)),  Collection(Edm.GeographyMultiPolygon)	) 	 MOd $root/sm//)/!/_1._/@M__#_T96e	LT	   $root/_w3/*(+/X_26_()/_//_/_  And	@Rv/_ Sub	_()	or  CAsT(Edm.Geography ) Or cast(null,Edm.Binary)	adD	null 	ANd	 		cAst( STArTSWith(		__.Y() 	DIv   _	aDD _()	DiV	null	Ge	null	OR	null 	AND $it	dIVby	null	le	null	eq			CaST(Cast(Edm.Binary)	add	null	Lt	null ,  Collection(Edm.Binary))		Gt		_()	dIv	null	has	'_'	AND	null	OR 	ISOf(Edm.Binary),__.E6(R=@__)/_._._//_/_ Or	 iSof( Edm.Binary)	moD	$it	OR	null	gT	CasT(Edm.Binary)	MUl	null	hAS	'_'	AND	null	ANd	null) eq 	 _(_=casT(Edm.Binary)) MOd	 R.___._._._KA()/	sUb	  @_/_	LT	$root/_	ADd	null	oR	null	AND	null	NE   _	lt	MiNdATETIMe()	SUB	null		aNd 	isoF(Collection(Edm.Binary))	mod	null	OR	null		Ne isof(CASt(Edm.Binary  )	Eq	casT(Edm.Binary)	ADD	null	hAS	'_'	oR	null	or	null ,Collection(Edm.Geography) ) 	sUB 	STArtSWITh(null,null)	LT	cAST(Edm.Binary)	aDD	null	GT	null	ANd	null	or	null  	IN		(0)	  	AnD		$root/_//	Mod	$root/_/			Or	@_Q 	 dIV CAST(_()	EQ	null	AND	null	, Collection(Edm.Geography))		 GE cAst(null,Edm.Binary)	DIv	null	GE	null,Edm.Geography) 	 mUL ISoF(CaSt(		iSoF(	CAst( Collection(Edm.Binary)		)	MuL	_()	div	null	lt	null	aNd	null	Gt	_()	or	null,Collection(Edm.Geography))	MOD $root/_/	SuB	_()	anD	null AnD	_()/$count	mUL	null ,Edm.GeographyMultiPolygon)	   dIvby		conTAiNs($it	eq	null,$it	Le	null	and	null	 ) 	NE $root/_/	dIVbY	ISOf(Edm.Binary)	Or	null lt $root/_// or	 	HAsSuBSeT(null,null)	MOd	null 		AND  		$root/_0/ 	 	ADd	 		CAST(null,Edm.Binary)	dIV	null	LT $root/_//_	Add	null	Lt	null,Collection(Edm.GeographyMultiPolygon))  		And	caST(Cast( 	cOnCaT(null,null)	SUb	null	and	null 	,   Edm.Geography)	 MUL	ISof(null,Edm.Binary) HAS _._._'_,_,_,_' 	 	anD				iSoF(null,Edm.Binary)	aNd	null ,Collection(Edm.GeographyMultiPolygon))	MuL 	CONCat(_	Or	null ,	 	Concat(null,null))		dIVBy  		$root/_//_	MOD	null	and	null	 AND _	SUb	null	eQ	null	anD	null	Eq	cASt(	_._()/$count	OR	null,Collection(Edm.Geography)) ne		CasT( null,Edm.Binary )	dIVbY	null	hAS	'_'	OR	null		 OR	  	_._()	aND	null	or  cASt(Collection(Edm.Binary)  		) MOd CAst(null,Edm.Binary)	DiV	null	aNd	null		ge		$root/xN/+!	diV	 cAst(  Edm.GeometryLineString )	Eq	 	gEo.INtERsECTs(cAst(  			Edm.GeometryLineString	)			dIvby Isof(Edm.Geometry		 	  ) adD	HassuBSEQuence(null,null)  	DIVby  $it	aND	null 	lE	 	$root/_/ ne 	 _O	mod	cONcAT( cAST(Edm.Binary)	SUb	null	 ,$root/_	le	null ) Add	_	And	null	aND ISoF(Edm.Binary)	NE	null  eq  H(_=null)/_/	ADD	 	caST(null,Edm.Binary)  	oR	iSof(Edm.Binary)	nE	null,IsOf( Edm.Geography)	DIv		  	_2H(_=@___,B=null,_=[])	lt _/_/_ suB	 	HASSUBsET(null,null)	divbY	null			NE	hASSuBsET(null,null)	diV	null	aND	null)	 and @_/_(Z=	 [])/R////,!/!!/!/@Z___._.g8_#_81_/_.__ mOd	iSoF(q___(B_=@N,_T8_=@v_) mOd 	geo.INTERSeCTs(cONcat(CAst( $it	add	null	aNd	null,Edm.Binary)	add	_()	hAs	'_'	Ne	$root/_	nE	null	or	null	anD	null	 ,_/_	SUB	$root/_	AnD	null) 	Div   _		 Gt 	 cONCaT( ISOf(Edm.Binary)	Mod	null	and	null,	cASt(Edm.Binary)	add	null	eq	null	aND	null) anD		 CaSt(	 $it	OR	null ,Edm.Binary	 )	gE	mINdAtetImE()	ADd	null	And	null, 		 		CaSt(	_/_ Mul		cASt(Edm.Binary)		Le 	_()	Mod	null	or	null OR	minDAteTIME()	AnD	null,Collection(Edm.Geometry))	ADd	$root/_/		div $root/_	DiVBY	null	gT	null	And	null gE		CAsT(Edm.Binary)	Add	null	hAS	'_'	oR	null		le		 $root/__/	ne		$it	add	null	In	(null)	aNd	null	)	NE	starTsWith(		$root/_/,	 ISoF( Collection(Edm.Binary))) 	ne		GEo.iNTErsECTS( _()	sUb	null	OR	null  ,CASt(Edm.Binary)	SUb	null)	 ANd						 		iSOf( Edm.Geography ) add 	coNcAt(null,null)	div	null	or	null		OR	$it	mUL	null	oR	null			oR		__/_()	 EQ __.__._.W_()  MOd		_._()/$count	Div	null	ne	null	OR	null  	  ,Edm.GeometryMultiPolygon	) has 'C6kd,_1'	dESc,CaSt(Edm.Geography) 	aDD		 	_(V=@_,_W_=IsOF(	Edm.Geography )		     	 in	ConCAt(					coNcat( _	oR  $root/_	Mul	null,__._._.L__()/ ADD  _	divbY	null	and	null	 Has  	_._'_'			aND _()	) mod	 gEO.inTeRsects(mInDatetIME()	divbY	null,isof(Edm.Binary)	ge	null),cast( Edm.Geography))	Ge				@M_/@_/_() OR		Z__._._1()	lt	$it	mOD	null	Or	 _	Mod	null	LT	null	OR	null aND	 $root/_O/$/$/ lt	CONCAT( 	 $root/_//_	DIVbY	null	eq	null,	ISof(Edm.Binary)	lE	null	anD	null)	 		div 			_	mOD	null AND   $root/_///_/@Z.Z/_/_() 	 Or  	 cASt($root/___//_() diVBy _._()	ADD	null	OR	null,		   Collection(Edm.GeometryLineString))	In (+5),_6=IsOf(	Edm.GeographyMultiPolygon)	mul  	_()// oR  	cONtaiNS($root/_/	divBy	_()	anD	null	Lt	MiNDaTeTiMe()	NE	null	oR	null	   ,isOf(Edm.Binary)	Ge	$root/_	gt	null	OR	null) DIvby @__/_	MUl  ISoF(	Collection(Edm.Binary))	haS	'_' 	OR	$root/_//_	ADd	null	Ne	null	aNd	null 	 	AnD			isOf(   Edm.Binary)		DIV 	$it	MUl	null	hAs	'_'	And	$it	Mul	null	lT	null	oR	$root/__/)/)//I._.C._._._/I__.__._R(_=null,_=@_,_=@_,_=@_)//_,_w5=@J_) 	gT d7(_6X_=		[    		  ],_=@__q)/!,(*/_e__.__.W_/_2(_0=@P,_=caSt( miNDaTETIme()	iN	(null)	OR	null, Edm.Binary ) 	DIvBy		_()	iN	(null)	Gt		CAst(Edm.Binary)	LE	null	OR	null	or $root/_	Divby	null	aND	null) AdD 			isof(C00_(G93C=ConcAT( 	ISOf(	 Edm.Binary	) 	nE _()	ADD	null	Or	null,iSoF($root/_	DIV	null	ANd	null,	Edm.Binary)		diVBy 	iSof(Edm.Binary) ),__=@N,_=@_,_86q6=@z,___7=@_)/F.P.G.__w1//;!/_U()		,Collection(Edm.Geography) )  IN IsoF( Edm.GeographyLineString  ) HAs	F.en_'2,28,57' AnD  $it/_/__DYi4D()/!$ add   		$it/V.P/U/_/@_._#_  lT 	_._.o/t2/_//_._/_()			MOd  isOf(		  	   cASt(  	 Edm.Geometry 	)	MOd coNCaT( iSOf(null,Edm.Binary)	MOD	null	NE	null	 ,  	$it	HAs	'_'	AnD	null	)	lT $root/_//_	nE	null	 	or IsOf(Edm.Binary)	DIv	null And	$root/Z__/  	iN	(	gEometrY'Srid=3;mUltIpoinT()'	,null) 		or  	$root/_	gE	null	aND	null,Collection(Edm.Geography) ) muL @_1/_._.J/_._()/$count		sub CONCAT( 	casT(Edm.Binary),	haSSUbseT(null,null)	And	null	  )	  eQ cASt(null,Collection(Edm.Binary))	Le	null	And _._()	LE	null	aNd	null	iN		 	__.__()	 or  $root/_	LE	null		 ANd  ISOf(Collection(Edm.GeographyMultiPolygon) 	 	 )	oR	 ISOF(Edm.Binary 	 ) HAS			'_,_'		AsC