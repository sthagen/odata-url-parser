$COMpUTE=(matCHeSpAtTern( {""  	:"\b"	,"\\\\":	""	}  dIvBY	 NoT @D_	MOd 	l_(X=	[True,true]			oR CAsT(TRue,_) SUb TRuE EQ True)/AlL(_ :[]  LT  MindATetiMe() MUL TRue haS '_'	 anD  -TrUE suB trUe Ne truE)	DiVBY	[] 	  gE  8 	GE		 CAsT($root/__(@_)/_ GE (TrUe) lT True	 ,_._) SuB	$root/_/_	 GE	$root/_ gT TRUe	lt  			 {}  DIV  $it OR TruE ne 	 		nOt	caST(Collection(t)	) DIvBY  	-t.o.e()	gT  	-	$root/____(_=tRuE)/_/_	 	 Add	   (	minDAteTIMe() AND tRuE) sub tRue In tRue oR trUE	eQ	cOnTainS(tRue,TRue) lt True		oR  {"":"","":""}	 oR	(  CasT(_._) 	 suB 	_() mUL TrUe anD TRUe haS   _._'6')	dIV	nOt		$it  DIvBy	 [] eq TruE OR tRUe Lt	 noT tRue ge True aNd truE	And  TRUE sUB truE  	le	["",""]	MUl trUE aDd tRuE Gt truE or trUE	aND  tRUe MOd TRuE oR tRuE	AnD ([] mUl TRuE) DIvby ISof(_) DivbY trUe EQ truE gt ISoF(_) sUB TRUE gE tRue or tRUE MOd	seCond(   [ $root/_ mOd true and True] gT	$root/_/_ DIv noT TRuE mOd TRUE Or tRue Or 'p')	aND $root/_/_/@_ Ge	MaxdATeTIMe() lE [] DIv TRUE Le True  In (	'') 	aNd 	 	-geO.lEngTh(GEo.dIsTAnCE(cAsT(	Collection(Edm.Binary)),GEoGraphY'Srid=1;mULTilINEstRINg()' div TrUE IN TruE And trUe	)  MOD  _/_ MoD isOF(_) ADD tRue NE TrUE aNd TruE EQ minDAtETiMe() or TRuE oR trUE 	lE 		GEO.DIStance(TRuE,TRUE) dIvBY noT TRue diVBY trUe hAS '_' anD tRuE Gt -tRuE divBy trUe aND TruE anD TrUe				 Or	cAsT(TRue,Collection(_)	) MoD trUE OR TRUe)		Eq	nOT	99	dIVby  $root/_ DIv tRUE LE tRUe aND TrUE  GT ISOf(_) DIVbY TRUE Ge tRue Or TruE	 moD 		iSoF(			MiNdateTImE() Ne tRue and trUE		,	_._) aDd	 noT TRuE In (TRUe) or trUe  aND (TrUE) adD trUe	nE	-[] HaS '_' And TrUE sUb $root/_ add trUE hAs '_' and true or		_ GE (trUe) Eq TrUe oR TRUe	NE 	 	$it	le		isof([""] ADd $root/_ add TRUe in (TRUe) aND truE GE not trUE and True AnD truE, Edm.SByte) mUl _/_ Ne MiNdaTETime() lE TrUe	aNd	iSOf(	tRuE,_	) sUB TrUE	suB	nOt	__()	Ne 	 -  geoMETRy'SrId=907;muLTILinESTRiNG()' aND 		StaRTSwITH(truE,TRue) dIV noT TrUE dIv True	 eq	-trUE	 AND $it ne trUE Or tRUE divbY $root/D/:/_._/_	Or	 ISOF(  	[""	 	] 	 , Collection(A__.Q)  )		Lt	$root/S_F_(_=trUe) 	 	 SuB _._._() ADd [] diVBy trUE Or tRUE eq $it HAS '_' OR trUE	 	ge     0655-10-30t05:05z anD truE or  $root/_//_		AnD 		CasT( Collection(_))	MUL	(MindATETIME() NE truE or truE	) DIVBy true AnD TrUe sUb null	 	  	 mUl	 ISof(not	isoF(_._ )  dIV $it sub tRue Le $root/_ ADD trUe lT TRUe Or TrUe	 AnD  $root/_ aNd truE	ADd			 	+08	 Mul (TruE) suB TRue Or trUE  Le	 not TRUe sUB tRUe iN (TRUe) anD TruE 	 LT			 $root/_/_ suB	 _() Div TruE lt tRUE oR true lE MINdATEtIME() suB TrUe Ge tRue or trUe	 AND	-TRuE ne trUe or tRUE 	 Or _/_ AnD TRUE, 	 Collection(_)	)	 NE		  [":"	,"",	"",tRue 			]	   mUl	  		-	not tRuE MoD tRUE And TRue	 eq	 tRUE haS '_' Or tRuE	   aND 	   [""] aNd true  		 	AnD  K3.NB_()		 MOd	_._._(_=@_)/_ ANd TrUE	 HaS	_._._'_,2,6,_,_'	 aND	 iSoF(Edm.Binary	) mod TrUe 	AnD	_.y(_=@u5___)/@_._/	mUl	NOt NOT  [] ADD TruE oR TrUE Mul (TrUe) lt tRUe aND tRUE NE (TRuE) mod tRue iN (TRUe) Or TrUE	  	 Or			 (isof(_) DiVBy tRue) DIvBY TRuE and  $root/_	DivBy				NOT 	isOf(geOmETry'SRID=4;PoiNt(NaN NaN)' mUL noT trUe Add tRuE aNd truE,_	) 		nE 	( [] Has '_') sUB tRUe DiV TRUE gt tRUe or tRuE lE $it mUl TRUe Ge TRue  or  CASt(Edm.Binary) mUL TrUe ge true	oR	CaSt(	  Collection(UW) ) oR x.A1.E()/_._g.U_/aLL(_m7P:maXDATetIme()   DivBY enDSwITh(tRUE,tRUe) div cast(_) Eq truE AnD trUe ge  		 -		IsOF(_) Div TRUE OR true diVbY $it div tRUe OR TrUE Le $root/_ NE TrUE OR TRue			or 	$it GE true) AnD	FWC634/__/aLL(_:tRUe)	 ,ma4x____Qh_3w/l.i8/@Q8I.n5/hl25._.H8(_={ 	},H=@_)/@GS		AdD 	 Pu._/@_a.i9___7.__._#u5_JF5 DiVBy toUppeR(NOT MAXdaTetImE()  	div	nOT not	 $root/_ aDd TRUE aND tRue DIVby $root/_ in (tRUE) aND tRUE IN (TRue) Add  _ Ne CAst(_) eQ trUE Or trUE OR	_._()/_ DIVby TRUe lt true		Eq	$root/p_(_=tRue)/_()	   IN	( geOMEtRY'Srid=0;lINesTRINg(NaN NaN,NaN NaN)')	 	anD	 -					ISoF( 	caSt(_) anD truE,Collection(_)	) AdD -TRue divBY tRUE NE TruE anD TRUe  SuB 		$root/_ MoD TrUE oR True  HAS		'_,4,_,_' OR GEOMETRy'SriD=5;MulTiLInESTrIng()' sub tRUe in (TRUe)	  SUB	$this sUb  geOGrapHY'srid=4;COlLeCtioN(POlYgOn((NaN NaN)))' Le			isOF(		MINDATetImE() MoD True	,	Collection(_)) Le $root/_ in (trUE)	ANd			_._()/ diV tRue eQ TRUe	iN	( 	 	  	gEOMetRY'sRid=7;pOiNT(-INF 72E5 6e7)', GeOGRaPHY'SrId=888;COLlECtiON(LInestrInG(NaN NaN NaN,NaN NaN),MulTIPOlYGON(((NaN NaN))),mUlTiliNEstrINg((NaN NaN,NaN NaN)))'	,	GEOMeTrY'srId=48204;mULTipOInT((NaN NaN NaN NaN))'	 )  		aNd 	 	nOt	{		}  	ge		  NOT TrUe lT TrUe or tRuE ge	( 	 		( 	NOt tRue dIvBY truE) MuL iSOF(_) SUB true Or trUe le -TRue dIv True gT true aNd TRuE And tRUe)	 MuL _ MuL tRuE	oR		GEO.DIstaNCE(mIndatetiME()		,Isof(_) ANd tRUE)		 Ge -truE oR trUE		OR   -tRue DiV TrUe)		 muL	isOF(	L)  	dIVbY _.n/@_/$count($searCH=!;$sEaRcH=!) And	U/_	AdD (true 	) oR TrUe	 Lt	NoT NOt tRUe LE trUE Or tRue	or ([] adD TRUe	) AND tRUE	HaS	 '7877,+75' 			iN	ISoF(_P()/_._(_=@_,_=@_)/_		Or 		maXdaTeTiME()	 sUb			-	cAST(_) gT TrUE oR True sub tRUE has '_' ANd trUE		  oR minUtE(True) Or TRUE  ,	X._8.B 	) 	 oR  nOT		@__ MuL maxDatEtime() or TRue  	nE	 -	 minDateTiMe() div TRUe AdD TrUE lE not TruE dIV True LE TrUE oR trUe aND tRUE	div	-$root/_ DIVBy tRUE AND True 	OR  	 -  (	MIndatETImE() dIV TRuE anD TRUe	)  AdD		 7 add true in (tRuE)  or	 [] mUL true ne TruE	 	EQ		GEOGraphy'SRID=7;MulTilINEstRInG()'		ANd  		CAsT(  _26	 	)	Eq 		(GeOMetRy'SrId=1283;MuLTipolyGOn(((NaN NaN)))'	 In	Not	 -TruE anD TRUe in TrUE)	NE	gEogrAPHy'sriD=4;POiNT(NaN NaN NaN NaN)' sUb	-isOF(_) LE trUE OR True anD True	 gE 	 {} hAS '_' oR tRUE )	anD		(X5(_h=_(_=@E36gk,_o=cAST( Collection(_._) )	 lE  cast(_) ge TRuE oR tRUE	anD  $it NE TRue AND true,W=[	""]) mUl 		 isof(	tRIM(nOT TruE eQ TRUe	 ) mOD	TOTAlOffsETminuteS(tRUe) mOd caST(_) ge _() DiVBY TRUE aNd TruE ,Collection(Edm.DateTimeOffset))	 	or    noT iSOF(Edm.Binary) moD TrUe aNd TrUE 	DivBY		[] dIvbY tRue	Ne CAst(		_._._HX   ) Gt		$root/_		Sub	cAsT(ISof(_) DIv True,	Collection(_)) Sub TRUE or tRUE  	lt	 gEogRaPHy'SriD=9;muLtiLineStRing()' ne True aDD True,_P_2U03=@D)/$filter(@_ Or   	{	}	MUl  ( -  	{} muL tRUE eq TrUE	 gE  Not tRUE DivBy tRUe  And NoT TRue eQ True	 	 ) gT tOTaLoFFsETMiNUtES(truE) gt _() OR True OR TRUe	 Or fLOor((tRUe) And true	)		  iN (TRUE) eQ TruE)/anY(			Q_3: 	nOT	 CAst(_._._  ) 		moD	Now() sub isof(_) has '_' anD TRUe ne $it or TrUe	 	 OR GEOmETrY'srId=1;PoLYgOn((NaN NaN))' and TRUE	 	 suB  not	CASt(Edm.Binary 	) aDd _() and TRuE eq $root/_ SUB tRuE aNd TrUE OR tRUE	 in -	TrUe muL TRuE or tRUE OR   ISOf(Collection(_._)	) MoD 	_._()/_ GE tRue aNd truE	gE	_()/$count ANd {})	aND [	"{\f"]) 	 ne	_()/el__(_=@d)	  Ge	$this		gt	{  	"":	"" ,"+":"\f\f" } Add 	__()/_		eQ $root/oN_	OR	noT		_/_	Ne 	   ( 	(tRUe) Div TRuE OR tRUE ) MOD isoF(_) mUl TRue 	AND	   	(	_.__/@_._#_			GE	(_() DivBY true Lt TrUe oR truE)  divbY	 Isof(_)	 Or  	  $root/_ Or tRuE 	 )	 	 OR geogrAPhy'SrId=8;PoLYgOn((NaN NaN),(NaN NaN))'			OR $root/_/_ mod TRUe AnD tRUE 	Or	_() oR		[ 			]	ADD	 	- nOt	-( 	noT true Mod TrUE iN (tRUE)	) 	 DIV 	CaSt(_) And truE	  Lt $it mOD TRUE AND	_.H_.w()/_ Lt 	Not	$root/_ Or TrUe		Sub @_		mul			 (__(_=@_,_=@_)/$filter(True)	 EQ ISof(_) DIv TrUE)		DIV (_() Or TRUE) gt MiNDAtetime() or truE				Lt ISOF(		0 hAS _._'_' or truE,_		 	)	suB  _ hAS '_' AnD trUe		OR _() Le TruE and TRUE		LE geOMETRy'srid=08;MUltIPOlygoN(((9 2 NaN,NaN NaN NaN NaN,NaN NaN NaN),(NaN NaN NaN,NaN NaN NaN,NaN NaN,NaN NaN),(NaN NaN NaN,NaN NaN,NaN NaN),(NaN NaN)))' 	mUL 	( CAsT(	 	Edm.Binary))	HAS  '__' 			 OR	 (	($root/_ Div truE GE TrUE Or TruE ) gT $it OR truE		 ) DiV 	 gEogRAPHY'SRId=4;MuLTIPolyGon()' Mod tRuE oR tRue	AnD (true) dIv tRue LE TRUE Lt NaN 	mUL		{	":::\r:"		:MIndaTeTImE() gE TrUe ,""	 :":"   ,	":": 		minDAtETIMe() DiVBy TRUE aND trUE}	DiVBY			cast([""] haS '_' anD TruE,Collection(Edm.Guid))	gE	NOT CaST(Edm.Binary) Sub [] In (tRuE) AND TRUE iN TRUE ANd TrUe AND	{} 	 HAs	 	 '4,0,_' And  _ Sub true IN (tRuE) oR tRue 		  	)	 and			TotalOffSEtMInUtEs(	_()/any(x_R   :	cASt(		Collection(pn_)	 )					 OR  8 DIVBY	 CAST(_	 	)	ADd	[] dIv tRUE AND TruE OR	-tRuE DIV TRUE hAS '_') mOD  CASt(tOlOWeR($root/__l(Q_R=@_nJ)	mod  isof( 	 nOT		NOT tRUE gT tRUe 	, J1)				LE 	D(_=@_) DiV	  CaST(TRuE,_)	 Lt 	 LeNgth(TrUe) DiVBy TrUE aNd True Or _()	anD  $root/_/_ has '_,_'	And	(tRUe) lE tRue	Or		I.M.U()/_._._ 	 			 )	LT iSof(Collection(P)	) 	oR 	$root/t/:::/_._._/_._()		EQ minute(	tRUE LT tRuE or TRuE	) 	DIv	$it Le true oR TrUe,Collection(_1.X.I)	)	Le ISOF(  _._2._)	 oR  ISOF(-casT(Collection(L) ) lt  CaST(-	MinDAteTimE() Or tRUe DivbY tRuE le trUe ANd truE,	 		Collection(_))		MoD 	-miNDAtetIME() GT tRue oR trUe	iN (NaN 	,	9,tRUE)	aND $root/_/_ haS '_' Or TRUe oR	cAse(not True dIvby tRUe:{} iN (trUe)) suB	isoF(_._	)  Ge	NoT TRUe MUl tRUe le TrUe	   GE			NOt	$root/_ ADD TrUE gT TRuE  Gt -True		 AnD  - 	TrUe mOD TrUe Ne tRue Or tRuE	,Collection(X))	 LT	  	IsOF(	 	Collection(Q)	)	gt	- {	"":"" ,"\r" :		{	"":"","":"","":""	} lE	-TRuE aDD TruE or	  TrUe diVBy True or tRUe,"":"?{:"} sUb	   $root/_3_(Q=GeoGraPhy'SriD=5;cOlLecTion(MuLTipOiNt())')	muL	  _.N_.__.s()	DIv  	NOT	 NOT tRuE diVby TRue Gt TrUE Lt (TrUe) gT TRUE	lE	 NoT	 [] lE TrUE OR truE dIVbY CaST(_) sUb TRUE eQ TRuE or TRUe lE $it ADD trUE oR tRUe 	or	 	NOT tRuE LT tRUE aND true	DIV _.t_L.___._/@__M#_/_()		 		le	 	ISoF(Collection(T)) AnD	  			[	"","",""]	mUL -true	aND (TrUE) AND TRue  iN	 -	__.___/_._() SUb	 noT			  nOt TruE DiVBy true GE tRuE HAs	_._'_,_'		Eq $root/_/_/_	 add	 isof(_) MUL tRuE lT TrUe	 	oR	HoUr( $it nE TRuE AnD truE) MuL		$root/_//_ Mod truE And True   SuB 	-@_/_/_() MuL	[] MUL TRUE	Div  	 	 _ muL	$it Mul TrUe iN (trUe) and trUE		HAS	_D.K_4_.W._'_,6'   anD @_#_	nE  	$root/__(@_)/_	 suB $it SUb True Has '_' Or tRUE	aNd minDAtEtIme() mOd tRuE eq TruE Or truE  		aNd _._()/ sUb not TRuE DIvBy tRue Ge TRUe Ne MindaTetimE() iN (True) 	   OR CEILIng( 	-_  lt   nOT TRUe			aDD		  iSOF( [] GT tRUe,Collection(Edm.Binary)  	)  sUB	 noT TRUE GE TruE AND true	 nE  CAST(_) Gt trUE 	gE 08	 dIvby MinDaTetImE() anD TRue	ge	$it Mod TruE oR TRue aND	[] Mul tRUe Gt tRuE 	)	moD 	 	TOtAlOFFsetmiNuTeS(-	cASt(TRue,_) aDD truE lE trUE	 in  (TruE,TruE) OR	$root/_ EQ trUE OR tRUE  	) ADD	@_/_	aDD	-True DiVBy TruE Ge true or TRUE oR	ISof(	 Collection(_._))  Lt  $root/_ aNd TRUE or [] MoD tRuE Has '_' ANd trUE)	As	 T